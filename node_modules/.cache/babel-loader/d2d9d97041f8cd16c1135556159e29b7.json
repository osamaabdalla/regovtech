{"ast":null,"code":"import { AUTHENTICATE, UNAUTHENTICATE } from \"../constants\";\nexport default function currentReducer(state = {\n  user: {\n    id: 0,\n    name: '',\n    email: '',\n    password: '',\n    identity: ''\n  },\n  isAuthenticated: null\n}, action) {\n  switch (action.type) {\n    case AUTHENTICATE:\n      const savedusers = window.localStorage.getItem(\"usersdata\");\n      const loggeduserid = window.localStorage.getItem(\"loggeduserid\");\n      const usrdata = typeof savedusers === \"string\" ? JSON.parse(savedusers) : null;\n      let state = {};\n\n      if (usrdata) {\n        for (let index = 0; index < usrdata.length; index++) {\n          const element = JSON.parse(usrdata[index]);\n\n          if (element.email == loggeduserid) {\n            return {\n              user: {\n                id: element.id,\n                name: element.name,\n                email: element.email,\n                password: element.password,\n                identity: element.identity\n              },\n              isAuthenticated: true\n            };\n          }\n        }\n      }\n\n    case UNAUTHENTICATE:\n      return {\n        user: {\n          id: 0,\n          name: '',\n          email: '',\n          password: '',\n          identity: ''\n        },\n        isAuthenticated: false\n      };\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/OsamaAbdullah/Downloads/TempFiles/Today/ReactJs/routing-react-redux-authenticated/src/reducers/current.tsx"],"names":["AUTHENTICATE","UNAUTHENTICATE","currentReducer","state","user","id","name","email","password","identity","isAuthenticated","action","type","savedusers","window","localStorage","getItem","loggeduserid","usrdata","JSON","parse","index","length","element"],"mappings":"AACA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,cAA7C;AAGA,eAAe,SAASC,cAAT,CACbC,KAAe,GAAG;AAChBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,CADA;AAEJC,IAAAA,IAAI,EAAE,EAFF;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,QAAQ,EAAE,EAJN;AAKJC,IAAAA,QAAQ,EAAE;AALN,GADU;AAQhBC,EAAAA,eAAe,EAAE;AARD,CADL,EAWbC,MAXa,EAYH;AACV,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,YAAL;AACE,YAAMa,UAAU,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAnB;AACA,YAAMC,YAAY,GAAGH,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAArB;AACA,YAAME,OAAO,GAAG,OAAOL,UAAP,KAAsB,QAAtB,GAAiCM,IAAI,CAACC,KAAL,CAAWP,UAAX,CAAjC,GAA0D,IAA1E;AACA,UAAIV,KAAK,GAAG,EAAZ;;AACA,UAAGe,OAAH,EAAW;AACT,aAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,OAAO,CAACI,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACnD,gBAAME,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAWF,OAAO,CAACG,KAAD,CAAlB,CAAhB;;AACA,cAAGE,OAAO,CAAChB,KAAR,IAAiBU,YAApB,EAAiC;AAC/B,mBAAO;AACLb,cAAAA,IAAI,EAAE;AACJC,gBAAAA,EAAE,EAAEkB,OAAO,CAAClB,EADR;AAEJC,gBAAAA,IAAI,EAAEiB,OAAO,CAACjB,IAFV;AAGJC,gBAAAA,KAAK,EAAEgB,OAAO,CAAChB,KAHX;AAIJC,gBAAAA,QAAQ,EAAEe,OAAO,CAACf,QAJd;AAKJC,gBAAAA,QAAQ,EAAEc,OAAO,CAACd;AALd,eADD;AAQLC,cAAAA,eAAe,EAAE;AARZ,aAAP;AAUD;AACF;AACF;;AACH,SAAKT,cAAL;AACE,aAAO;AACLG,QAAAA,IAAI,EAAE;AACJC,UAAAA,EAAE,EAAE,CADA;AAEJC,UAAAA,IAAI,EAAE,EAFF;AAGJC,UAAAA,KAAK,EAAE,EAHH;AAIJC,UAAAA,QAAQ,EAAE,EAJN;AAKJC,UAAAA,QAAQ,EAAE;AALN,SADD;AAQLC,QAAAA,eAAe,EAAE;AARZ,OAAP;AAxBJ;;AAmCA,SAAOP,KAAP;AACD","sourcesContent":["import { IAuthenticate, IUnauthenticate } from \"../actions/current\";\nimport { AUTHENTICATE, UNAUTHENTICATE } from \"../constants\";\nimport { ICurrent, AUser } from \"../types\";\n\nexport default function currentReducer(\n  state: ICurrent = {\n    user: {\n      id: 0,\n      name: '',\n      email: '',\n      password: '',\n      identity: ''\n    },\n    isAuthenticated: null,\n  },\n  action: IAuthenticate | IUnauthenticate,\n): ICurrent {\n  switch (action.type) {\n    case AUTHENTICATE:\n      const savedusers = window.localStorage.getItem(\"usersdata\");\n      const loggeduserid = window.localStorage.getItem(\"loggeduserid\");\n      const usrdata = typeof savedusers === \"string\" ? JSON.parse(savedusers) : null;\n      let state = {};\n      if(usrdata){\n        for (let index = 0; index < usrdata.length; index++) {\n          const element = JSON.parse(usrdata[index]);\n          if(element.email == loggeduserid){\n            return {\n              user: {\n                id: element.id,\n                name: element.name,\n                email: element.email,\n                password: element.password,\n                identity: element.identity\n              },\n              isAuthenticated: true\n            }\n          }\n        }\n      }\n    case UNAUTHENTICATE:\n      return {\n        user: {\n          id: 0,\n          name: '',\n          email: '',\n          password: '',\n          identity: ''\n        },\n        isAuthenticated: false,\n      }\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}