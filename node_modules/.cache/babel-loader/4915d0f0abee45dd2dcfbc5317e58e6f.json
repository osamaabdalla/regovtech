{"ast":null,"code":"function createRecursionDetectThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(wrappedDispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n\n    function wrappedDispatch(action) {\n      if (typeof action === 'function') {\n        action[isNestedThunkSymbol] = true;\n      }\n\n      return dispatch(action);\n    }\n  };\n}\n\nvar thunk = createRecursionDetectThunkMiddleware();\nthunk.withExtraArgument = createRecursionDetectThunkMiddleware;\nvar isNestedThunkSymbol = Symbol('isNestedThunk');\nexport default thunk;\nexport { isNestedThunkSymbol };","map":{"version":3,"sources":["/Users/OsamaAbdullah/Downloads/TempFiles/Today/ReactJs/regovtech/node_modules/redux-thunk-recursion-detect/dist/reduxThunkRecursionDetect.esm.js"],"names":["createRecursionDetectThunkMiddleware","extraArgument","dispatch","getState","next","action","wrappedDispatch","isNestedThunkSymbol","thunk","withExtraArgument","Symbol"],"mappings":"AAAA,SAASA,oCAAT,CAA8CC,aAA9C,EAA6D;AAC3D,SAAO,gBAGD;AAAA,QAFJC,QAEI,QAFJA,QAEI;AAAA,QADJC,QACI,QADJA,QACI;AACJ,WAAO,UAAAC,IAAI;AAAA,aAAI,UAAAC,MAAM,EAAI;AACvB,YAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,iBAAOA,MAAM,CAACC,eAAD,EAAkBH,QAAlB,EAA4BF,aAA5B,CAAb;AACD;;AAED,eAAOG,IAAI,CAACC,MAAD,CAAX;AACD,OANU;AAAA,KAAX;;AAQA,aAASC,eAAT,CAAyBD,MAAzB,EAAiC;AAC/B,UAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChCA,QAAAA,MAAM,CAACE,mBAAD,CAAN,GAA8B,IAA9B;AACD;;AAED,aAAOL,QAAQ,CAACG,MAAD,CAAf;AACD;AACF,GAnBD;AAoBD;;AAED,IAAMG,KAAK,GAAGR,oCAAoC,EAAlD;AACAQ,KAAK,CAACC,iBAAN,GAA0BT,oCAA1B;AACA,IAAMO,mBAAmB,GAAGG,MAAM,CAAC,eAAD,CAAlC;AAEA,eAAeF,KAAf;AACA,SAASD,mBAAT","sourcesContent":["function createRecursionDetectThunkMiddleware(extraArgument) {\n  return ({\n    dispatch,\n    getState\n  }) => {\n    return next => action => {\n      if (typeof action === 'function') {\n        return action(wrappedDispatch, getState, extraArgument);\n      }\n\n      return next(action);\n    };\n\n    function wrappedDispatch(action) {\n      if (typeof action === 'function') {\n        action[isNestedThunkSymbol] = true;\n      }\n\n      return dispatch(action);\n    }\n  };\n}\n\nconst thunk = createRecursionDetectThunkMiddleware();\nthunk.withExtraArgument = createRecursionDetectThunkMiddleware;\nconst isNestedThunkSymbol = Symbol('isNestedThunk');\n\nexport default thunk;\nexport { isNestedThunkSymbol };\n"]},"metadata":{},"sourceType":"module"}